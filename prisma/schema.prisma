// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Guest {
  id          String        @id @default(uuid()) @db.Uuid
  slug        String        @db.VarChar(255)
  name        String        @db.VarChar(255)
  phoneNumber String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  rsvp        RSVP?
  guestbook   Guestbook[]
  GuestVisits GuestVisits[]

  @@map("guests")
}

enum Attendance {
  COMING
  NOTCOMING
  TENTATIVE
  NOTCONFIRMED
}

model RSVP {
  id            String     @id @default(uuid()) @db.Uuid
  guestId       String?    @unique @db.Uuid
  attendance    Attendance @default(NOTCONFIRMED)
  numberOfGuest Int        @default(1)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  guest         Guest?     @relation(fields: [guestId], references: [id], onDelete: Cascade)

  @@index([guestId])
  @@map("rsvp")
}

model Guestbook {
  id        String   @id @default(uuid()) @db.Uuid
  guestId   String?  @db.Uuid
  guest     Guest?   @relation(fields: [guestId], references: [id], onDelete: Cascade)
  message   String   @db.VarChar(1024)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([guestId])
  @@map("guestbook")
}

enum Source {
  QRCODE
  DIRECT
}

model GuestVisits {
  id        String   @id @default(uuid()) @db.Uuid
  guestId   String?  @db.Uuid
  guest     Guest?   @relation(fields: [guestId], references: [id], onDelete: Cascade)
  source    Source   @default(DIRECT)
  userAgent String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([guestId])
  @@map("guestVisits")
}
